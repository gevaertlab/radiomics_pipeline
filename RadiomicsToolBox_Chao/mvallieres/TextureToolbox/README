   _______   ____          _______             ____     ____    __
      |     |       \   /     |     |     |   |    |   |       /  |
      |     |___     \ /      |     |     |   |____|   |___    \__  
      |     |        / \      |     \     /   |   \    |          \ 
      |     |____   /   \     |      \___/    |    \   |____   |__/
-------------------------------------------------------------------------

|TEXTURE ANALYSIS TOOLBOX|
--> A toolkit to perform 3D/2D texture analysis in MATLAB.

Features: - Gray-Level Co-occurence Matrix (GLCM)
	  - Gray-Level Run-Length Matrix (GLRLM)
	  - Gray-Level Size Zone Matrix (GLSZM)
	  - Neighborhood Gray-Tone Difference Matrix (NGTDM)

-------------------------------------------------------------------------
REFERENCE:
[1] Vallières, M. et al. (2015). A radiomics model from joint FDG-PET and 
    MRI texture features for the prediction of lung metastases in soft-tissue 
    sarcomas of the extremities. Physics in Medicine and Biology, 60(14), 
    5471-5496. doi:10.1088/0031-9155/60/14/5471
-------------------------------------------------------------------------
AUTHOR: Martin Vallières <mart.vallieres@gmail.com>
-------------------------------------------------------------------------
HISTORY:
- Version 1.0: May 2015
-------------------------------------------------------------------------
STATEMENT:
This toolbox is part of <https://github.com/mvallieres/radiomics/>, 
a package providing MATLAB programming tools for radiomics analysis.
--> Copyright (C) 2015  Martin Vallières

    This package is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This package is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this package.  If not, see <http://www.gnu.org/licenses/>.
-------------------------------------------------------------------------
NOTE:
This toolbox is self-contained and can be used on its own, outside of the 
<https://github.com/mvallieres/radiomics/> package.
-------------------------------------------------------------------------
DISCLAIMER:
"I'm not a programmer, I'm just a scientist doing stuff!"
-------------------------------------------------------------------------



INPUTS:

1. 2D or 3D volume in MATLAB format (.mat) 
2. Mask of dimensions corresponding to the volume in MATLAB format.
   The mask contains 1's in the region of interest (ROI), and 0's 
   elsewhere.



INSTRUCTIONS:

1. Set MATLAB path to all subfolders of the /Texture_Toolbox directory, which can be
   found at: <https://github.com/mvallieres/radiomics/>

2. Prepare the input volume for texture analysis (isotropic resampling, quantization, etc.) by 
   running 'prepareVolume.m'. Please see ref. [1] for more details. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% EXAMPLE:                                                                                   % 
% Let a PET scan be defined by 'volume', with 'mask' defining the region of interest         % 
% (ROI). The PET scan has in-plane resolution of 4 mm, with slice spacing of 3.27 mm.        %
%                                                                                            %
% 1. To prepare 'volume' for matrix-based texture analysis at a scale of 5 mm, without WBPF, %
%    using a Lloyd-Max quantization algorithm with 32 gray-levels, run:                      %
%                                                                                            %
%    [ROIonly,levels] = prepareVolume(volume,mask,'PETscan',4,3.27,1,5,'Matrix','Lloyd',32); %
%                                                                                            %  
%    Next, use 'ROIonly' and 'levels' as inputs to 'getGLCM.m','getGLRLM.m', 'getGLSZM.m'    %
%    or 'getNGTDM.m'.                                                                        % 
%                                                                                            % 
%                                                                                            %
% 2. To prepare 'volume' for global texture analysis at a scale equal to the in-plane        %   
%    resolution, with R=2, run:                                                              %
%                                                                                            %
%    [ROIonly] = prepareVolume(volume,mask,'PETscan',4,3.27,2,'pixelW','Global);             %
%                                                                                            %
%    Next, use 'ROIonly' as input to 'getGlobalTextures.m'.                                  % 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

3. For Global textures, run:
   - [globalTextures] = getGlobalTextures(ROIonly,100); % Here, using 100 bins in the histogram 
 
4. For matrix-based textures, run:
   - [GLCM] = getGLCM(ROIonly,levels); 
     [glcmTextures] = getGLCMtextures(GLCM);
   - [GLRLM] = getGLRLM(ROIonly,levels); 
     [glrlmTextures] = getGLRLMtextures(GLRLM);
   - [GLSZM] = getGLSZM(ROIonly,levels); 
     [glszmTextures] = getGLSZMtextures(GLSZM);
   - [NGTDM,countValid] = getNGTDM(ROIonly,levels); 
     [ngtdmTextures] = getNGTDMtextures(NGTDM,countValid);



**********************************************************************************************
ACKNOWLEDGEMENTS: other software code
- Wei's GLRLM toolbox: Xunkai Wei, Gray Level Run Length Matrix Toolbox
  v1.0, Software,Beijing Aeronautical Technology Research Center, 2007.
  <http://www.mathworks.com/matlabcentral/fileexchange/17482-gray-level-run-length-matrix-toolbox>
- CERR development team: <http://www.cerr.info/>
- Dirk-Jan Kroon (imresize3D.m): <http://www.mathworks.com/matlabcentral/fileexchange/21451-multimodality-non-rigid-demon-algorithm-image-registration/content//functions/imresize3d.m>
**********************************************************************************************
